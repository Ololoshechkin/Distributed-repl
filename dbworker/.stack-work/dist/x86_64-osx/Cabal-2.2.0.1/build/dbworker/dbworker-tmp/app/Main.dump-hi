
==================== FINAL INTERFACE ====================
2019-10-08 19:31:10.547657 UTC

interface main:Main 8044
  interface hash: 956ccf84fa2a17714994cecc34911f84
  ABI hash: 148f498bf23ed8944edb430f9e9abea6
  export-list hash: d56dc404a29902efb10147a21e11cbb1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b0e60420452af0f7fcd1286f9ca151ea
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: Only-0.1 StateVar-1.1.1.1 adjunctions-4.4
                      array-0.5.2.0 attoparsec-0.13.2.2 base-4.11.1.0 base-orphans-0.7
                      bifunctors-5.5.3 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-textual-0.2.1.0 bytestring-0.10.8.2 call-stack-0.1.0
                      comonad-5.0.4 containers-0.5.11.0 contravariant-1.4.1
                      data-accessor-0.2.2.8 dbworker-0.1.0.0 deepseq-1.4.3.0
                      direct-sqlite-2.3.23 distributive-0.5.3 exceptions-0.10.0
                      free-5.0.2 ghc-boot-th-8.4.4 ghc-prim-0.5.2.0 hashable-1.2.7.0
                      integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2 kan-extensions-5.2
                      lens-4.16.1 mtl-2.2.2 network-2.6.3.6 network-transport-0.5.2
                      network-transport-tcp-0.6.0 pretty-1.1.3.6 primitive-0.6.3.0
                      profunctors-5.2.2 reflection-2.1.4 scientific-0.3.6.2
                      semigroupoids-5.2.2 sqlite-simple-0.4.16.0 stm-2.4.5.1 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.1 th-abstraction-0.2.10.0
                      time-1.8.0.2 transformers-0.5.5.0 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unordered-containers-0.2.9.0
                      utils-0.1.0.0 vector-0.12.0.2
orphans: attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         network-2.6.3.6:Network.Socket reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.4.5.1:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         adjunctions-4.4:Data.Functor.Rep
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         free-5.0.2:Control.Comonad.Cofree
                         free-5.0.2:Control.Comonad.Trans.Cofree
                         free-5.0.2:Control.Monad.Free free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         network-transport-0.5.2:Network.Transport
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 06420d98d10ee04b8dda9c0d88032c55
import  -/  dbworker-0.1.0.0:Lib b7841170227d3a72667c4eff6b2a0d9b
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  network-2.6.3.6:Network.Socket.Internal af2cb1ca411a338f4846b994baabce94
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4d0f21c74c38714a83a9d8d8e76e622b
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (GHC.Magic.noinline
                    @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                    GHC.IO.failIO1
                      `cast`
                    (forall (a :: <*>_N).
                     <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                    @ ()
                    Main.main3)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   w) -}
60b53b0f652b36733fc49c1496b13547
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
aa8310463c3dd67e5bab60e191239305
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Main.$wfail ipv
                   : serverAddr ds
                   -> case ds of wild1 {
                        [] -> Main.$wfail ipv
                        : port ds2
                        -> case ds2 of wild2 {
                             [] -> Main.$wfail ipv
                             : workerType ds3
                             -> case ds3 of wild3 {
                                  []
                                  -> case NetworkUtils.connectToServer1
                                            serverAddr
                                            port
                                            ipv of ds4 { (#,#) ipv2 ipv3 ->
                                     case ipv3 of wild4 {
                                       Data.Either.Left errMsg
                                       -> GHC.IO.Handle.Text.hPutStr2
                                            GHC.IO.Handle.FD.stdout
                                            errMsg
                                            GHC.Types.True
                                            ipv2
                                       Data.Either.Right ds5
                                       -> case ds5 of wild5 { (,) masterConn masterEndpoint ->
                                          case GHC.Base.eqString
                                                 workerType
                                                 (GHC.CString.unpackCString# Main.main2) of wild6 {
                                            GHC.Types.False
                                            -> case masterConn of ww { Network.Transport.Connection ww1 ww2 ->
                                               Lib.$wworkerServer
                                                 @ Lib.FileSystemDBWorker
                                                 Lib.$fDBWorkerFileSystemDBWorker
                                                 Lib.FileSystemDBWorker
                                                 ww1
                                                 masterEndpoint
                                                 ipv2 }
                                            GHC.Types.True
                                            -> case Lib.makeSQLDBWorker1
                                                      ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                                               case masterConn of ww { Network.Transport.Connection ww1 ww2 ->
                                               Lib.$wworkerServer
                                                 @ Lib.SQLiteDBWorker
                                                 Lib.$fDBWorkerSQLiteDBWorker
                                                 ipv5
                                                 ww1
                                                 masterEndpoint
                                                 ipv4 } } } } } }
                                  : ipv2 ipv3 -> Main.$wfail ipv } } } } }) -}
cf12721b98a710c32ca317da2a6ab59d
  main2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-sql"#) -}
915e5825bbb4475e2fd63fd0d15da4de
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main4) -}
ad46757e277ac510e27bc80d4fa5d335
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at app/Main.hs:11:3-32"#) -}
92781d7072642dd0702c22bd1cf34244
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

