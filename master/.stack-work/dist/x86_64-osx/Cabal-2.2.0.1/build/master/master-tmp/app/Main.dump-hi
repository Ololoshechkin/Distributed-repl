
==================== FINAL INTERFACE ====================
2019-10-09 09:23:10.843997 UTC

interface main:Main 8044
  interface hash: aceee3fc705c9f162e62906fb9d0ed70
  ABI hash: a213801c0b0344c94b378e0baa41cc56
  export-list hash: 2ddd862db1953b900d6127a4d3c74a5f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d732d92eff065f9a097e8e59a4ae2081
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.chooseWorkerLoop
  Main.deleteIth
  Main.main
  Main.maxAttempts
module dependencies:
package dependencies: StateVar-1.1.1.1 abstract-par-0.3.3
                      adjunctions-4.4 array-0.5.2.0 base-4.11.1.0 base-orphans-0.7
                      bifunctors-5.5.3 binary-0.8.5.1 bytestring-0.10.8.2
                      call-stack-0.1.0 comonad-5.0.4 containers-0.5.11.0
                      contravariant-1.4.1 data-accessor-0.2.2.8 deepseq-1.4.3.0
                      distributive-0.5.3 exceptions-0.10.0 free-5.0.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      kan-extensions-5.2 lens-4.16.1 monad-par-0.3.4.8
                      monad-par-extras-0.3.3 mtl-2.2.2 network-2.6.3.6
                      network-transport-0.5.2 network-transport-tcp-0.6.0 pretty-1.1.3.6
                      primitive-0.6.3.0 profunctors-5.2.2 random-1.1 reflection-2.1.4
                      semigroupoids-5.2.2 stm-2.4.5.1 tagged-0.8.5
                      template-haskell-2.13.0.0 text-1.2.3.1 th-abstraction-0.2.10.0
                      time-1.8.0.2 transformers-0.5.5.0 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 unordered-containers-0.2.9.0
                      utils-0.1.0.0 vector-0.12.0.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         network-2.6.3.6:Network.Socket reflection-2.1.4:Data.Reflection
         vector-0.12.0.2:Data.Vector.Unboxed
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         stm-2.4.5.1:Control.Monad.STM
         monad-par-0.3.4.8:Control.Monad.Par.Scheds.Trace
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Fix
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         containers-0.5.11.0:Data.Graph
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         free-5.0.2:Control.Comonad.Cofree
                         free-5.0.2:Control.Comonad.Trans.Cofree
                         free-5.0.2:Control.Monad.Free free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         kan-extensions-5.2:Data.Functor.Day
                         kan-extensions-5.2:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         network-transport-0.5.2:Network.Transport
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.10.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Storable
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Concurrent ef40f102578b6e7296c2a2358b631ee7
import  -/  base-4.11.1.0:Control.Concurrent.MVar ca4c584bd9db3afcc6677dea708f87d7
import  -/  base-4.11.1.0:Control.Monad.IO.Class 96109c36cb3c919872278540487fa39e
import  -/  base-4.11.1.0:Data.Bifunctor a977586bad544f929bb5bc7f139aaa1c
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.MVar 5887537e57bb20af86721190334ddceb
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO e02b6055b5362a3eac04f83991602a53
import  -/  binary-0.8.5.1:Data.Binary 08d99786e937f906c100d31770fc35f8
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy 9b14d99e53cf2d30c74c7ddcd59ad2e2
import  -/  containers-0.5.11.0:Data.Map 0dbdaec812ef695a364aa6c69e7f7d53
import  -/  containers-0.5.11.0:Data.Map.Internal 0150e210d0ae8df0f3a0669d5e32d8fa
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  lens-4.16.1:Control.Lens 532019473786772c921a68b9043e1684
import  -/  lens-4.16.1:Control.Lens.Getter c3a50fe525c9191ea4f0fb36da41d87d
import  -/  monad-par-0.3.4.8:Control.Monad.Par.IO 313e5d0a5d2a4b3634326e1ea5dd5326
import  -/  network-transport-0.5.2:Network.Transport 18cb17ad2d91e2c94ab38d1745341964
import  -/  random-1.1:System.Random eb48a79589c28c60ca3da23b8b25a895
import  -/  utils-0.1.0.0:Messages f163bf9a7a33e16d4758d509c538a791
import  -/  utils-0.1.0.0:NetworkUtils 3821ce2108e1c88fa63c76058138d588
c94f5030b0f5c517ab8d47d82c1d7a5b
  $sfind1 ::
    Network.Transport.ConnectionId
    -> Data.Map.Internal.Map Network.Transport.ConnectionId a -> a
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Network.Transport.ConnectionId)
                   (w1 :: Data.Map.Internal.Map Network.Transport.ConnectionId a) ->
                 case w of ww { GHC.Word.W64# ww1 ->
                 Main.$wpoly_go13 @ a ww1 w1 }) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
ed0b5510ff664f8651f7429da1eda918
  $wchooseWorkerLoop ::
    NetworkUtils.ServerMaster
    -> Messages.Program
    -> Network.Transport.ConnectionId
    -> GHC.Prim.Int#
    -> Control.Monad.Par.IO.ParIO ()
  {- Arity: 4, Strictness: <L,U(A,U(U),A)><L,U><L,U><S,1*U>,
     Inline: [0] -}
61155d2ab2e552f3b8369a598697ecbc
  $wdeleteIth :: GHC.Prim.Int# -> [a] -> [a]
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0],
     Unfolding: (\ @ a (ww :: GHC.Prim.Int#) (w :: [a]) ->
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case w of wild {
                        [] -> Main.deleteIth1 @ a
                        : ipv ipv1
                        -> case ww of ds1 {
                             DEFAULT
                             -> let {
                                  ds2 :: ([a], [a])
                                  = case GHC.List.splitAt_$s$wsplitAt'
                                           @ a
                                           ipv1
                                           (GHC.Prim.-# ds1 1#) of ww1 { (#,#) ww2 ww3 ->
                                    (ww2, ww3) }
                                } in
                                GHC.Base.++_$s++
                                  @ a
                                  (case ds2 of wild2 { (,) xs' xs'' ->
                                   Main.$wunsafeDrop @ a 1# xs'' })
                                  ipv
                                  (case ds2 of wild2 { (,) xs' xs'' -> xs' })
                             1#
                             -> GHC.Base.++_$s++
                                  @ a
                                  (Main.$wunsafeDrop @ a 1# ipv1)
                                  ipv
                                  (GHC.Types.[] @ a) } }
                   1#
                   -> GHC.Base.++
                        @ a
                        (GHC.Types.[] @ a)
                        (Main.$wunsafeDrop @ a 1# w) }) -}
1eaa83bcad8811f09bdb8c607c84d89b
  $wpoly_go13 ::
    GHC.Prim.Word#
    -> Data.Map.Internal.Map Network.Transport.ConnectionId a -> a
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
00bb2257859340c278f030fbdf7c8098
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
460f79d33a10d8f1a32fc20dc2bbb293
  chooseWorkerLoop ::
    NetworkUtils.ServerMaster
    -> Messages.Program
    -> Network.Transport.ConnectionId
    -> GHC.Types.Int
    -> Control.Monad.Par.IO.ParIO ()
  {- Arity: 4, Strictness: <L,U(A,U(U),A)><L,U><L,U><S(S),1*U(1*U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: NetworkUtils.ServerMaster)
                   (w1 :: Messages.Program)
                   (w2 :: Network.Transport.ConnectionId)
                   (w3 :: GHC.Types.Int) ->
                 case w3 of ww { GHC.Types.I# ww1 ->
                 Main.$wchooseWorkerLoop w w1 w2 ww1 }) -}
5285e91b577dfcbf2d7205cafa6dcc27
  deleteIth :: GHC.Types.Int -> [a] -> [a]
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: [a]) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$wdeleteIth @ a ww1 w1 }) -}
350d74d2d63909a3f04e055e4c6c7e7a
  deleteIth1 :: [a]
  {- Unfolding: (\ @ a ->
                 GHC.Base.++ @ a (GHC.Types.[] @ a) (Main.deleteIth2 @ a)) -}
b6e03a03439c5d1b91b2e24cfbec69e7
  deleteIth2 :: [a]
  {- Unfolding: (\ @ a ->
                 Main.$wunsafeDrop @ a 1# (GHC.Types.[] @ a)) -}
d909eb586b7fb167249e85360e89bbe9
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
94e6cfeb247ead8e1c6942e10281b614
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (NetworkUtils.runDefaultMaster1 Main.main2) -}
5637ffbd1e401d6ef456cfa4ab6246f7
  main2 ::
    NetworkUtils.ServerMaster
    -> Network.Transport.ConnectionId
    -> Data.ByteString.Internal.ByteString
    -> Control.Monad.Par.IO.ParIO ()
  {- Arity: 3, Strictness: <L,U(U,U(U),A)><L,U(U)><L,1*U(U,U,U,U)> -}
dd01fc0a3b1548cfac1331698de1b1f0
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
fe0055c56503a89440f60e8718e9e96c
  maxAttempts :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

