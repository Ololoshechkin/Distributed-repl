Configuring distributed-process-0.7.4...
clang: warning: argument unused during compilation: '-nopie' [-Wunused-command-line-argument]
Preprocessing library for distributed-process-0.7.4..
Building library for distributed-process-0.7.4..
[ 1 of 27] Compiling Control.Distributed.Process.Internal.BiMultiMap ( src/Control/Distributed/Process/Internal/BiMultiMap.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/BiMultiMap.o )
[ 2 of 27] Compiling Control.Distributed.Process.Internal.StrictContainerAccessors ( src/Control/Distributed/Process/Internal/StrictContainerAccessors.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/StrictContainerAccessors.o )
[ 3 of 27] Compiling Control.Distributed.Process.Internal.StrictList ( src/Control/Distributed/Process/Internal/StrictList.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/StrictList.o )
[ 4 of 27] Compiling Control.Distributed.Process.Internal.StrictMVar ( src/Control/Distributed/Process/Internal/StrictMVar.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/StrictMVar.o )
[ 5 of 27] Compiling Control.Distributed.Process.Internal.CQueue ( src/Control/Distributed/Process/Internal/CQueue.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/CQueue.o )
[ 6 of 27] Compiling Control.Distributed.Process.Internal.WeakTQueue ( src/Control/Distributed/Process/Internal/WeakTQueue.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/WeakTQueue.o )
[ 7 of 27] Compiling Control.Distributed.Process.Serializable ( src/Control/Distributed/Process/Serializable.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Serializable.o )
[ 8 of 27] Compiling Control.Distributed.Process.Internal.Types ( src/Control/Distributed/Process/Internal/Types.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Types.o )
[ 9 of 27] Compiling Control.Distributed.Process.Management.Internal.Types ( src/Control/Distributed/Process/Management/Internal/Types.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Types.o )
[10 of 27] Compiling Control.Distributed.Process.Management.Internal.Bus ( src/Control/Distributed/Process/Management/Internal/Bus.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Bus.o )
[11 of 27] Compiling Control.Distributed.Process.Management.Internal.Trace.Types ( src/Control/Distributed/Process/Management/Internal/Trace/Types.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Trace/Types.o )
[12 of 27] Compiling Control.Distributed.Process.Internal.Messaging ( src/Control/Distributed/Process/Internal/Messaging.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Messaging.o )

[;1msrc/Control/Distributed/Process/Internal/Messaging.hs:94:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        sendMessage :: Serializable a =>
                       LocalNode
                       -> Identifier -> Identifier -> ImplicitReconnect -> a -> IO ()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m94 |[0m[0m sendMessage :: [;1m[35mSerializable a[0m[0m
[;1m[34m   |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[13 of 27] Compiling Control.Distributed.Process.UnsafePrimitives ( src/Control/Distributed/Process/UnsafePrimitives.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/UnsafePrimitives.o )

[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:81:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        nsend :: Serializable a => String -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m81 |[0m[0m nsend :: [;1m[35mSerializable a => String -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:86:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        nsendRemote :: Serializable a =>
                       NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m86 |[0m[0m nsendRemote :: [;1m[35mSerializable a => NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:94:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        send :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m94 |[0m[0m send :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m   |[0m[0m[;1m[35m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:107:24: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable a1â€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeSendLocal :: (Serializable a) => ProcessId -> a -> Process ()
      In an equation for â€˜sendâ€™:
          send them msg
            = do proc <- ask
                 let ... in do ...
            where
                unsafeSendLocal :: (Serializable a) => ProcessId -> a -> Process ()
                unsafeSendLocal pid msg'
                  = sendCtrlMsg Nothing
                      $ LocalSend pid (unsafeCreateUnencodedMessage msg')[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m107 |[0m[0m     unsafeSendLocal :: [;1m[35m(Serializable a) => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:120:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        usend :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m120 |[0m[0m usend :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:131:13: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        sendChan :: Serializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m131 |[0m[0m sendChan :: [;1m[35mSerializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:145:28: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable a1â€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeSendChanLocal :: (Serializable a) =>
                               SendPortId -> a -> Process ()
      In an equation for â€˜sendChanâ€™:
          sendChan (SendPort cid) msg
            = do proc <- ask
                 let ... in do ...
            where
                unsafeSendChanLocal ::
                  (Serializable a) => SendPortId -> a -> Process ()
                unsafeSendChanLocal spId msg'
                  = sendCtrlMsg Nothing
                      $ LocalPortSend spId (unsafeCreateUnencodedMessage msg')[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m145 |[0m[0m     unsafeSendChanLocal :: [;1m[35m(Serializable a) => SendPortId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/UnsafePrimitives.hs:150:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        wrapMessage :: Serializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m150 |[0m[0m wrapMessage :: [;1m[35mSerializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[14 of 27] Compiling Control.Distributed.Process.Internal.Primitives ( src/Control/Distributed/Process/Internal/Primitives.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Primitives.o )

[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:247:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        send :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m247 |[0m[0m send :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:272:15: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeSend :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m272 |[0m[0m unsafeSend :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:284:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        usend :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m284 |[0m[0m usend :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:297:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeUSend :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m297 |[0m[0m unsafeUSend :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:301:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        expect :: forall a. Serializable a => Process a[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m301 |[0m[0m expect :: [;1m[35mforall a. Serializable a => Process a[0m[0m
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:309:12: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        newChan :: Serializable a => Process (SendPort a, ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m309 |[0m[0m newChan :: [;1m[35mSerializable a => Process (SendPort a, ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:333:13: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        sendChan :: Serializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m333 |[0m[0m sendChan :: [;1m[35mSerializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:351:19: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeSendChan :: Serializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m351 |[0m[0m unsafeSendChan :: [;1m[35mSerializable a => SendPort a -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:355:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        receiveChan :: Serializable a => ReceivePort a -> Process a[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m355 |[0m[0m receiveChan :: [;1m[35mSerializable a => ReceivePort a -> Process a[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:360:23: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        receiveChanTimeout :: Serializable a =>
                              Int -> ReceivePort a -> Process (Maybe a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m360 |[0m[0m receiveChanTimeout :: [;1m[35mSerializable a => Int -> ReceivePort a -> Process (Maybe a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:370:21: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        mergePortsBiased :: Serializable a =>
                            [ReceivePort a] -> Process (ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m370 |[0m[0m mergePortsBiased :: [;1m[35mSerializable a => [ReceivePort a] -> Process (ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:375:17: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        mergePortsRR :: Serializable a =>
                        [ReceivePort a] -> Process (ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m375 |[0m[0m mergePortsRR :: [;1m[35mSerializable a => [ReceivePort a] -> Process (ReceivePort a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:441:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        match :: forall a b. Serializable a => (a -> Process b) -> Match b[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m441 |[0m[0m match :: [;1m[35mforall a b. Serializable a => (a -> Process b) -> Match b[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:445:12: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        matchIf :: forall a b.
                   Serializable a => (a -> Bool) -> (a -> Process b) -> Match b[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m445 |[0m[0m matchIf :: [;1m[35mforall a b. Serializable a => (a -> Bool) -> (a -> Process b) -> Match b[0m[0m
[;1m[34m    |[0m[0m[;1m[35m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:530:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        wrapMessage :: Serializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m530 |[0m[0m wrapMessage :: [;1m[35mSerializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:535:22: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeWrapMessage :: Serializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m535 |[0m[0m unsafeWrapMessage :: [;1m[35mSerializable a => a -> Message[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:554:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unwrapMessage :: forall m a.
                         (Monad m, Serializable a) => Message -> m (Maybe a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m554 |[0m[0m unwrapMessage :: [;1m[35mforall m a. (Monad m, Serializable a) => Message -> m (Maybe a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:577:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        handleMessage :: forall m a b.
                         (Monad m, Serializable a) => Message -> (a -> m b) -> m (Maybe b)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m577 |[0m[0m handleMessage :: [;1m[35mforall m a b. (Monad m, Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:586:20: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        handleMessageIf :: forall m a b.
                           (Monad m, Serializable a) =>
                           Message -> (a -> Bool) -> (a -> m b) -> m (Maybe b)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m586 |[0m[0m handleMessageIf :: [;1m[35mforall m a b . (Monad m, Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:611:19: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        handleMessage_ :: forall m a.
                          (Monad m, Serializable a) => Message -> (a -> m ()) -> m ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m611 |[0m[0m handleMessage_ :: [;1m[35mforall m a . (Monad m, Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:617:21: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        handleMessageIf_ :: forall m a.
                            (Monad m, Serializable a) =>
                            Message -> (a -> Bool) -> (a -> m ()) -> m ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m617 |[0m[0m handleMessageIf_ :: [;1m[35mforall m a . (Monad m, Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:640:15: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        matchAnyIf :: forall a b.
                      (Serializable a) =>
                      (a -> Bool) -> (Message -> Process b) -> Match b[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m640 |[0m[0m matchAnyIf :: [;1m[35mforall a b. (Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:687:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        proxy :: Serializable a =>
                 ProcessId -> (a -> Process Bool) -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m687 |[0m[0m proxy :: [;1m[35mSerializable a => ProcessId -> (a -> Process Bool) -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:715:8: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature: die :: Serializable a => a -> Process b[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m715 |[0m[0m die :: [;1m[35mSerializable a => a -> Process b[0m[0m
[;1m[34m    |[0m[0m[;1m[35m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:736:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        exit :: Serializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m736 |[0m[0m exit :: [;1m[35mSerializable a => ProcessId -> a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:750:14: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        catchExit :: forall a b.
                     (Show a, Serializable a) =>
                     Process b -> (ProcessId -> a -> Process b) -> Process b[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m750 |[0m[0m catchExit :: [;1m[35mforall a b . (Show a, Serializable a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1024:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        expectTimeout :: forall a.
                         Serializable a => Int -> Process (Maybe a)[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1024 |[0m[0m expectTimeout :: [;1m[35mforall a. Serializable a => Int -> Process (Maybe a)[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1045:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        monitorPort :: forall a.
                       Serializable a => SendPort a -> Process MonitorRef[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1045 |[0m[0m monitorPort :: [;1m[35mforall a. Serializable a => SendPort a -> Process MonitorRef[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1222:10: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        nsend :: Serializable a => String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1222 |[0m[0m nsend :: [;1m[35mSerializable a => String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1230:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeNSend :: Serializable a => String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1230 |[0m[0m unsafeNSend :: [;1m[35mSerializable a => String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1234:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        nsendRemote :: Serializable a =>
                       NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1234 |[0m[0m nsendRemote :: [;1m[35mSerializable a => NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1244:22: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        unsafeNSendRemote :: Serializable a =>
                             NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1244 |[0m[0m unsafeNSendRemote :: [;1m[35mSerializable a => NodeId -> String -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1308:14: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        sendLocal :: (Serializable a) => ProcessId -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1308 |[0m[0m sendLocal :: [;1m[35m(Serializable a) => ProcessId -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Primitives.hs:1312:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (Binary a, Typeable a) => Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        sendChanLocal :: (Serializable a) => SendPortId -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1312 |[0m[0m sendChanLocal :: [;1m[35m(Serializable a) => SendPortId -> a -> Process ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[15 of 27] Compiling Control.Distributed.Process.Management.Internal.Trace.Primitives ( src/Control/Distributed/Process/Management/Internal/Trace/Primitives.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Trace/Primitives.o )

[;1msrc/Control/Distributed/Process/Management/Internal/Trace/Primitives.hs:150:17: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable mâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        traceMessage :: Serializable m => m -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m150 |[0m[0m traceMessage :: [;1m[35mSerializable m => m -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[16 of 27] Compiling Control.Distributed.Process.Management.Internal.Trace.Tracer ( src/Control/Distributed/Process/Management/Internal/Trace/Tracer.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Trace/Tracer.o )
[17 of 27] Compiling Control.Distributed.Process.Management.Internal.Agent ( src/Control/Distributed/Process/Management/Internal/Agent.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Agent.o )
[18 of 27] Compiling Control.Distributed.Process.Management ( src/Control/Distributed/Process/Management.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management.o )

[;1msrc/Control/Distributed/Process/Management.hs:297:13: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        mxNotify :: (Serializable a) => a -> Process ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m297 |[0m[0m mxNotify :: [;1m[35m(Serializable a) => a -> Process ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Management.hs:313:16: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable mâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        mxBroadcast :: (Serializable m) => m -> MxAgent s ()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m313 |[0m[0m mxBroadcast :: [;1m[35m(Serializable m) => m -> MxAgent s ()[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Management.hs:372:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable mâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        mxSink :: forall s m.
                  (Serializable m) => (m -> MxAgent s MxAction) -> MxSink s[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m372 |[0m[0m mxSink :: [;1m[35mforall s m . (Serializable m)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[19 of 27] Compiling Control.Distributed.Process.Internal.Closure.BuiltIn ( src/Control/Distributed/Process/Internal/Closure/BuiltIn.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Closure/BuiltIn.o )

[;1msrc/Control/Distributed/Process/Internal/Closure/BuiltIn.hs:196:13: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a, Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        returnCP :: forall a.
                    Serializable a =>
                    Static (SerializableDict a) -> a -> Closure (Process a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m196 |[0m[0m returnCP :: [;1m[35mforall a. Serializable a[0m[0m
[;1m[34m    |[0m[0m[;1m[35m             ^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[20 of 27] Compiling Control.Distributed.Process.Internal.Spawn ( src/Control/Distributed/Process/Internal/Spawn.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Spawn.o )

[;1msrc/Control/Distributed/Process/Internal/Spawn.hs:107:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        call :: Serializable a =>
                Static (SerializableDict a)
                -> NodeId -> Closure (Process a) -> Process a[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m107 |[0m[0m call :: [;1m[35mSerializable a[0m[0m
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Internal/Spawn.hs:151:17: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        spawnChannel :: forall a.
                        Serializable a =>
                        Static (SerializableDict a)
                        -> NodeId
                           -> Closure (ReceivePort a -> Process ()) -> Process (SendPort a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m151 |[0m[0m spawnChannel :: [;1m[35mforall a. Serializable a => Static (SerializableDict a)[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[21 of 27] Compiling Control.Distributed.Process.Management.Internal.Trace.Remote ( src/Control/Distributed/Process/Management/Internal/Trace/Remote.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Management/Internal/Trace/Remote.o )
[22 of 27] Compiling Control.Distributed.Process.Node ( src/Control/Distributed/Process/Node.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Node.o )

[;1msrc/Control/Distributed/Process/Node.hs:1090:21: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a, Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        dispatch :: (Serializable a) => Bool -> ProcessId -> a -> NC ()
      In an equation for â€˜ncEffectGetInfoâ€™:
          ncEffectGetInfo from pid
            = let
                lpid = processLocalId pid
                them = (ProcessIdentifier pid)
              in
                do node <- ask
                   mProc <- liftIO
                              $ withValidLocalState node $ return . (^. localProcessWithId lpid)
                   ....
            where
                dispatch :: (Serializable a) => Bool -> ProcessId -> a -> NC ()
                dispatch True dest pInfo = postAsMessage dest $ pInfo
                dispatch False dest pInfo
                  = ncSendToProcess dest $ unsafeCreateUnencodedMessage pInfo
                registeredNames
                  = Map.foldlWithKey
                      (\ ks k v -> if v == pid then (k : ks) else ks) [][0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1090 |[0m[0m   where dispatch :: [;1m[35m(Serializable a)[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                     ^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m
[;1msrc/Control/Distributed/Process/Node.hs:1206:18: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a, Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        postAsMessage :: Serializable a => ProcessId -> a -> NC ()[0m[0m
[;1m[34m     |[0m[0m
[;1m[34m1206 |[0m[0m postAsMessage :: [;1m[35mSerializable a => ProcessId -> a -> NC ()[0m[0m
[;1m[34m     |[0m[0m[;1m[35m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[23 of 27] Compiling Control.Distributed.Process.Internal.Closure.TH ( src/Control/Distributed/Process/Internal/Closure/TH.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Closure/TH.o )
[24 of 27] Compiling Control.Distributed.Process.Debug ( src/Control/Distributed/Process/Debug.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Debug.o )
[25 of 27] Compiling Control.Distributed.Process ( src/Control/Distributed/Process.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process.o )

[;1msrc/Control/Distributed/Process.hs:410:22: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wsimplifiable-class-constraints[0m[0m[;1m][0m[0m[;1m
    â€¢ The constraint â€˜Serializable aâ€™ matches an instance declaration
      instance (binary-0.8.5.1:Data.Binary.Class.Binary a,
                base-4.11.1.0:Data.Typeable.Internal.Typeable a) =>
               Serializable a
        -- Defined at src/Control/Distributed/Process/Serializable.hs:44:10
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    â€¢ In the type signature:
        spawnChannelLocal :: Serializable a =>
                             (ReceivePort a -> Process ()) -> Process (SendPort a)[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m410 |[0m[0m spawnChannelLocal :: [;1m[35mSerializable a[0m[0m
[;1m[34m    |[0m[0m[;1m[35m                      ^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[26 of 27] Compiling Control.Distributed.Process.Internal.Closure.Explicit ( src/Control/Distributed/Process/Internal/Closure/Explicit.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Internal/Closure/Explicit.o )
[27 of 27] Compiling Control.Distributed.Process.Closure ( src/Control/Distributed/Process/Closure.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Control/Distributed/Process/Closure.o )
Installing library in /Users/Vadim/Documents/fp/project/.stack-work/install/x86_64-osx/lts-12.26/8.4.4/lib/x86_64-osx-ghc-8.4.4/distributed-process-0.7.4-El66EZ9yCnK69YoxvjUCpC
Registering library for distributed-process-0.7.4..
